package com.cart.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.HttpStatusCodeException;
import org.springframework.web.client.RestTemplate;

import com.cart.config.AccessToken;
import com.cart.service.CartService;
import com.shared.model.Cart;
import com.shared.model.Product;

@RestController
@RequestMapping("/cart")
public class CartController {
	

	@Autowired
	private RestTemplate restTemplate;
	

	@Autowired
	private CartService cartService;
	
	@PostMapping(value ="/cart" )
	public Cart saveCart(@RequestBody Cart cart) {
		HttpHeaders httpHeaders = new HttpHeaders();
		httpHeaders.add("Authorization", AccessToken.getAccessToken());
		HttpEntity<Product> studentHttpEntity = new HttpEntity<Product>(httpHeaders);
		try {
		ResponseEntity<Product> responseEntity = restTemplate.exchange("http://localhost:8762/product/product?id="+cart.getProductId(), HttpMethod.GET,studentHttpEntity,Product.class);
		//model.addAttribute("students", responseEntity.getBody());
		Product[] ps = responseEntity.getBody();
		//Integer productId = ps[0].getProductId();
				cart.setProductId(cart.getProductId());
		}catch (HttpStatusCodeException e) {
			@SuppressWarnings("rawtypes")
			ResponseEntity responseEntity = ResponseEntity.status(e.getRawStatusCode()).headers(e.getResponseHeaders()).body(e.getResponseBodyAsString());
			//model.addAttribute("error", responseEntity);
		}
		
		return cartService.saveCart(cart);
	}
	
	@GetMapping(value ="/cart")
	public Cart getCartById(@RequestParam int id) {
		return cartService.getCartById(id);
	}
	
	@GetMapping(value = "/carts")
	public List<Cart> getCartList(){
		return cartService.getCartList();
	}
}
